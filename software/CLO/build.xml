<project name="CLO" default="compile" basedir=".">
  <description>CLO Build File</description>

  <property name="src" location="src"/>
  <property name="java-src" location="${src}/java"/>
  <property name="src-antlr" value="${java-src}/ie/ucd/clops/dsl/parser"/>
  <property name="build" location="bin"/>
  <property name="docs" location="doc"/>
  <property name="java-docs" location="${docs}/javadoc"/>
  <property name="dist"  location="dist"/>
  <property name="lib"  location="lib"/>
  <property name="test" location="test"/>
  <property name="temp-test" location="${test}/temp"/>
  <property name="java-target-version" value="1.5"/>
  <property name="antlr-src" value="CLO"/>
  <property name="runtime-jar-name" value="CLO"/>

  <path id="base.path">
    <filelist dir="${lib}">
      <file name="stringtemplate.jar"/>
      <file name="antlr-2.7.7.jar"/>
    </filelist>
  </path>

  <path id="antlr-mod.path">
    <path refid="base.path"/>
    <filelist dir="${lib}" files="antlr-3.0.1-mod.jar"/>
  </path>
	
  <path id="antlr.path">
    <path refid="base.path"/>
    <filelist dir="${lib}" files="antlr-3.0.1.jar"/>
  </path>

  <path id="runtime.path">
   <path refid="base.path"/>
   <filelist dir="${lib}" files="antlr-runtime-3.0.1.jar"/>
  </path>
	
  <path id="test.path">
    <path refid="runtime.path"/>
    <pathelement location="${build}"/>
  </path>

  <path id="compile.path">
    <path refid="test.path"/>
  </path>
	
  <path id="src.path">
    <pathelement path="${java-src}"/>
  </path>


  <target name="init">
    <echo message="Creating timestamp"/>
    <tstamp/>
    <mkdir dir="${build}"/>
  </target>

  <target name="checkAntlrBuildUpToDate">
    <echo message="Checking if the ANTLR generated files are up to date"/>
    <condition property="antlrBuild.required">
      <not>
        <uptodate srcfile="${src}/${antlr-src}.g" targetfile="${src-antlr}/${antlr-src}Parser.java"/>
      </not>
    </condition>
  </target>

  <target name="buildAntlr" depends="checkAntlrBuildUpToDate" if="antlrBuild.required">
    <antcall target="clean-antlr"/>
    <echo message="Running antlr"/>
    <java fork="yes" dir="${java-src}" classname="org.antlr.Tool">
      <classpath refid="antlr.path" />
      <arg value="-o"/>
      <arg value="${src-antlr}"/>
      <arg value="${src}/${antlr-src}.g"/>
    </java>
  </target>

  <target name="compile" depends="all-src" description="compile the source">
    <!-- Compile the java code from ${java-src} into ${build} -->
    <javac srcdir="${java-src}" 
           destdir="${build}" 
           target="${java-target-version}"
           debug="yes">
      <compilerarg value="-Xlint:all"/>
      <classpath refid="compile.path"/>
    </javac>
  </target>

  <target name="javadocs" depends="buildAntlr" description="Generate javadocs">
    <javadoc sourcepath="${java-src}" destdir="${java-docs}" classpathref="runtime.path">
            <packageset dir="${java-src}">    
                <include name="**"/>
            </packageset>
    </javadoc>
  </target>
	
  <target name="dist" depends="compile" description="Generate the distribution">
    <mkdir dir="${dist}/lib"/>

    <mkdir dir="${dist}/lib"/>
    <copy todir="${dist}/lib">
    	<fileset dir="${lib}/" includes="antlr-runtime-3.0.1.jar,antlr-2.7.7.jar,stringtemplate.jar"/>
    </copy>
		
    <!-- Build runtime jar -->
    <jar jarfile="${dist}/lib/${runtime-jar-name}.jar" basedir="${build}"/>
	  	
  </target>
	
  <target name="test-parser" depends="compile" description="simple test">
    <delete dir="${temp-test}"/>
    <mkdir dir="${temp-test}"/>
    <java fork="yes" classname="ie.ucd.clops.dsl.parser.ParserTest">
      <assertions>
        <enable/>
      </assertions>
      <classpath refid="test.path"/>
      <arg value="dsl-test.txt"/>
      <arg value="${temp-test}"/>
    </java>
    <javac srcdir="${temp-test}" destdir="${temp-test}" target="${java-target-version}">
      <compilerarg value="-Xlint:all"/>
      <classpath refid="test.path"/>
    </javac>
  </target>

  <target name="test-generic-parser" depends="compile" description="simple test">
    <java fork="yes" classname="ie.ucd.clops.runtime.parser.GenericCLParser">
      <assertions>
         <enable/>
      </assertions>
      <classpath refid="test.path"/>
    </java>
  </target>

  <target name="test-automaton" depends="compile" description="Automaton test">
    <java fork="yes" classname="ie.ucd.clops.runtime.automaton.AutomatonTest">
      <assertions>
         <enable/>
      </assertions>
      <classpath refid="test.path"/>
    </java>
  </target>

  <target name="clean-all" depends="clean-build,clean-antlr" description="clean up"/>
  <target name="clean" depends="clean-all"/>	
  <target name="all-src" depends="init,buildAntlr" description="Create all source files"/>

  <target name="clean-build" description="Clean up the build">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="${java-docs}"/>
  </target>

  <target name="clean-antlr" description="Clean up antlr generated files">
    <echo message="Deleting antlr generated files"/>
    <delete file="${src-antlr}/${antlr-src}.tokens"/>
    <delete file="${src-antlr}/${antlr-src}__.g"/>
    <delete file="${src-antlr}/${antlr-src}Parser.java"/>
    <delete file="${src-antlr}/${antlr-src}Lexer.java"/>
  </target>	

</project>
