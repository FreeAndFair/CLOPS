<project name="CLO" default="compile" basedir=".">
  <description>CLO Build File</description>

  <property name="src" location="src"/>
  <property name="java-src" location="${src}/java"/>
  <property name="test-src" location="${src}/test"/>
  <property name="dsl-src" location="dsl"/>
  <property name="src-antlr" value="${java-src}/ie/ucd/clops/dsl/parser"/>
  <property name="build" location="bin"/>
  <property name="docs" location="doc"/>
  <property name="java-docs" location="${docs}/javadoc"/>
  <property name="dist"  location="dist"/>
  <property name="reports.tests" location="test-reports"/>
  <property name="lib"  location="lib"/>
  <property name="test" location="test"/>
  <property name="temp-test" location="${test}/temp"/>
  <property name="java-target-version" value="1.5"/>
  <property name="antlr-src" value="CLO"/>
  <property name="full-jar-name" value="clops"/>
  <property name="runtime-jar-name" value="clops-runtime"/>
  <property name="test-file" value="dsl/clo-dsl.clo"/>
  <property name="src-dsl-interface" value="${java-src}/ie/ucd/clops/dsl/generatedinterface"/>
  <property name="src-dsl-interface-package" value="ie.ucd.clops.dsl.generatedinterface"/>
  <property name="dsl-interface-file" value="${dsl-src}/clo-dsl.clo"/>

  <path id="base.path">
    <filelist dir="${lib}">
      <file name="stringtemplate-3.2.jar"/>
      <file name="velocity-1.6.2.jar"/>
      <file name="velocity-1.6.2-dep.jar"/>
      <file name="junit-4.5.jar"/>
    </filelist>
  </path>

  <path id="antlr.path">
    <path refid="base.path"/>
    <filelist dir="${lib}" files="antlr-3.1.1.jar"/>
  </path>

  <path id="runtime.path">
   <path refid="base.path"/>
   <filelist dir="${lib}" files="antlr-3.1.1-runtime.jar"/>
  </path>
	
  <path id="test.path">
    <path refid="runtime.path"/>
    <pathelement location="${build}"/>
  </path>
	
	<path id="testdist.path">
	  <filelist dir="${dist}/lib">
		  <file name="${full-jar-name}.jar"/>
	  	<file name="antlr-3.1.1-runtime.jar"/>
	  	<file name="velocity-1.6.1.jar"/>
	  </filelist>
	</path>

  <path id="compile.path">
    <path refid="test.path"/>
  </path>
	
  <path id="src.path">
    <pathelement path="${java-src}"/>
    <pathelement path="${test-src}"/>
  </path>
	
  <path id="dist.path">
    <filelist dir="${dist}/lib" files="${runtime-jar-name}.jar"/>
  </path>

  <target name="init">
    <echo message="Creating timestamp"/>
    <tstamp/>
    <mkdir dir="${build}"/>
    <mkdir dir="${reports.tests}"/>
  </target>

  <target name="checkAntlrBuildUpToDate">
    <echo message="Checking if the ANTLR generated files are up to date"/>
    <uptodate srcfile="${src}/${antlr-src}.g" targetfile="${src-antlr}/${antlr-src}Parser.java" property="antlrBuild.notRequired"/>
  </target>

  <target name="buildAntlr" depends="checkAntlrBuildUpToDate" unless="antlrBuild.notRequired">
    <antcall target="clean-antlr"/>
    <echo message="Running antlr"/>
    <java fork="yes" dir="${java-src}" classname="org.antlr.Tool">
      <classpath refid="antlr.path" />
      <arg value="-o"/>
      <arg value="${src-antlr}"/>
      <arg value="${src}/${antlr-src}.g"/>
    </java>
  </target>

  <target name="compile-java" depends="all-src" description="compile the source">
    <!-- Compile the java code from ${java-src} into ${build} -->
    <javac srcdir="${java-src}" 
           destdir="${build}" 
           target="${java-target-version}"
           debug="yes">
      <compilerarg value="-Xlint:all"/>
      <classpath refid="compile.path"/>
    </javac>
  </target>

  <target name="compile-tests" depends="all-src" description="compile junit tests">
    <javac srcdir="${test-src}" 
           destdir="${build}" 
           target="${java-target-version}"
           debug="yes">
      <compilerarg value="-Xlint:all"/>
      <classpath refid="compile.path"/>
    </javac>
  </target>

  <target name="compile" depends="compile-java,compile-tests" description="compile java and tests"/>

  <target name="javadocs" depends="buildAntlr" description="Generate javadocs">
    <javadoc sourcepath="${java-src}" destdir="${java-docs}" classpathref="runtime.path"
             Verbose="no">
            <packageset dir="${java-src}">    
                <include name="**"/>
            </packageset>
    </javadoc>
  </target>
	
  <target name="update-dslcli" depends="dist">
    <java fork="yes" classname="ie.ucd.clops.dsl.Main">
      <assertions>
        <enable/>
      </assertions>
      <classpath refid="testdist.path"/>
      <arg value="-v"/>
      <arg value="-o"/>
      <arg value="${src-dsl-interface}"/>
      <arg value="-p"/>
      <arg value="${src-dsl-interface-package}"/>
      <arg value="${dsl-interface-file}"/>
    </java>
    <antcall target="dist"/>
  </target>
  
  <target name="dist" depends="compile" description="Generate the distribution">
    <mkdir dir="${dist}/lib"/>

    <mkdir dir="${dist}/lib"/>
    <copy todir="${dist}/lib">
    	<fileset dir="${lib}/" includes="antlr-3.1.1-runtime.jar,stringtemplate-3.2.jar,velocity-1.6.1-dep.jar,velocity-1.6.1.jar"/>
    </copy>
		
    <jar jarfile="${dist}/lib/${runtime-jar-name}.jar">
      <fileset dir="${build}" includes="ie/ucd/clops/runtime/** ie/ucd/clops/logging/**"/>
      <fileset dir="." includes="templates/**"/>
      <manifest>
        <attribute name="Class-Path" value="antlr-3.1.1-runtime.jar" />
      </manifest>
    </jar>

    <jar jarfile="${dist}/lib/${full-jar-name}.jar">
      <fileset dir="${build}"/>
      <fileset dir="." includes="templates/**"/>
      <manifest>
        <attribute name="Main-Class" value="ie.ucd.clops.dsl.Main" />
        <attribute name="Class-Path" value="antlr-3.1.1-runtime.jar velocity-1.6.1-dep.jar velocity-1.6.1.jar" />
      </manifest>
    </jar>
	  	
  </target>
	
  <target name="test-parser" depends="dist" description="simple test">
  	<echo message="Using ${test-file}"/>
    <delete dir="${temp-test}"/>
    <mkdir dir="${temp-test}"/>
    <java fork="yes" classname="ie.ucd.clops.dsl.Main">
      <assertions>
        <enable/>
      </assertions>
      <classpath refid="testdist.path"/>
      <!-- this should probably use the -b option and -d should produce a file -->
      <!-- corresponding to the input file -->
      <arg value="-v"/>
      <arg value="-d=./test/help.txt"/>
      <arg value="-c"/>
      <arg value="./templates/help.vm"/> 
      <arg value="-o"/>
      <arg value="${temp-test}"/>
    	<arg value='-p=""'/>
    	<arg value="-t"/>
      <arg value="${test-file}"/>
    </java>
    <javac srcdir="${temp-test}" destdir="${temp-test}" target="${java-target-version}">
      <compilerarg value="-Xlint:all"/>
      <classpath refid="dist.path"/>
    </javac>
  </target>

  <target name="test-automaton" depends="compile" description="Automaton test">
    <java fork="yes" classname="ie.ucd.clops.runtime.automaton.AutomatonTest">
      <assertions>
         <enable/>
      </assertions>
      <classpath refid="test.path"/>
    </java>
  </target>


  <target name="junit-tests" depends="compile" description="run junit tests">
    <junit printsummary="yes" showoutput="yes" haltonfailure="yes">
      <classpath refid="compile.path" />
      <formatter type="plain"/>

      <batchtest fork="yes" todir="${reports.tests}">
        <fileset dir="${test-src}">
          <include name="**/*.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="test-all" depends="junit-tests,test-parser,test-automaton" description="clean up"/>
  <target name="clean-all" depends="clean-build,clean-antlr" description="clean up"/>
  <target name="clean" depends="clean-all"/>	
  <target name="all-src" depends="init,buildAntlr" description="Create all source files"/>

  <target name="clean-build" description="Clean up the build">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="${java-docs}"/>
  </target>

  <target name="clean-antlr" description="Clean up antlr generated files">
    <echo message="Deleting antlr generated files"/>
    <delete file="${src-antlr}/${antlr-src}.tokens"/>
    <delete file="${src-antlr}/${antlr-src}__.g"/>
    <delete file="${src-antlr}/${antlr-src}Parser.java"/>
    <delete file="${src-antlr}/${antlr-src}Lexer.java"/>
  </target>	

  <target name="generate-ls">
    <ant antfile="buildls.xml"  
         dir="dsl"
         inheritAll="false"/>
  </target>

</project>
