##! ${info.getParserName()}OptionsInterface.java
#if( "$!info.getPackageName()" != "" ) 
package $info.getPackageName();

#end
/**
 * The interface used to handle the options on the user side.
 * @author The CLOPS team (kind@ucd.ie)
 */
public interface $info.getParserName()OptionsInterface {

#foreach($desc in $info.getOptionDescriptions())
#set($type = $desc.getType())

// Option $desc.getIdentifier(). #*
#if( "$!desc.getDescription()" != "" )
  * Description: $desc.getDescription()
#end*#
// Aliases: $desc.getAliases()

  /**
   * @return true if the option $desc.getIdentifier() has been used
   * in the command line.
   */
  boolean is$desc.getIdentifier()Set();
  
  
  
  #set($typename = $type.getOptionValueTypeClass())
  #if( "$type.getTypeDescriptionString()" == "string-enum")
    #set ($choices=$desc.getPropertyValue("choices"))
    #set ($list = $StringUtil.mkList($choices))
##    #set ($typename =  "$desc.getIdentifier()Enum")
##enum  $typename {
##  $desc.getPropertyValue("choices");
##  public static $typename get(String s) {
##	     #foreach($val in $list)
##	       if (${val}.toString().equals(s)) {
##	         return $val;
##	       }
##	     #end
##	     return null;
##	   }
##	}
	
  #end
  /** $type.getTypeDescriptionString()
   * Get the value of {@code Option} $desc.getIdentifier().
   * @return the value of the option $desc.getIdentifier() if it has been set
   * using the arguments. Throws an {@code IllegalStateException} otherwise.
   */ 
  $typename get$desc.getIdentifier()();
  
#end
}
