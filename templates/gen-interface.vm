##! ${info.getParserName()}OptionsInterface.java
#if( "$!info.getPackageName()" != "" ) 
package $info.getPackageName();

#end
#foreach($import in $info.getValueTypeImports())
import $import;
#end

/**
 * The interface used to handle the options on the user side.
 * @author The CLOPS team (kind@ucd.ie)
 */
public interface $info.getParserName()OptionsInterface {

#foreach($desc in $info.getOptionDescriptions())
#set($type = $desc.getType())

// Option $desc.getIdentifier(). #*
#if( "$!desc.getDescription()" != "" )
  * Description: $desc.getDescription()
#end*#
// Aliases: $desc.getAliases()

  /**
   * @return true if the option $desc.getIdentifier() has been used
   * in the command line.
   */
  boolean is$desc.getIdentifier()Set();
  #set($typename = ${info.getValueTypeClass($desc)})
  #if( "$type.getTypeDescriptionString()" == "enum")
  #set ($choices=$desc.getPropertyValue("choices")) 
  #set ($typename =  "$desc.getIdentifier()")
  #set ($options =  ${StringUtil.parseChoice($desc.getPropertyValue("choices"))})

  /**
   * The enumeration type used to represent the string enum option.
   */
  enum  $typename {
    #foreach ($o in $options.entrySet())
    
    ${o.getKey()}("${o.getValue()}")#if($velocityCount != $options.size()),#else;#end#end

    private final String sRepres;
    private $typename(final String s) {
      sRepres = s;
    }
    public String toString() {
      return sRepres;
    }
    /**
     * Returns the option in the enum form from the given
     * String.
     * @param s one of the following string: [$options]
     * @return a valid $typename member.
     */
    public static $typename get(final String s) {
      $typename res = null;#foreach($val in $options.entrySet())
      #set ($tab = $StringUtil.mkList($val.getValue()))
      
      if (#foreach($s in $tab)"$s".equals(s)#if($velocityCount != $tab.size()) || #end#end) {
        res = $val.getKey();
      }#end
      
      return res;
    }
  }
  #end

  /**
   * Get the value of {@code Option} $desc.getIdentifier().
   * @return the value of the option $desc.getIdentifier() if it has been set
   * using the arguments. Throws an {@code IllegalStateException} otherwise.
   */ 
  $typename get$desc.getIdentifier()();
  
#end
}
