basic is abstract
  default is a string that can be parsed by the current option
      <p>This property determines the value to which the option is set
      before parsing begins, and thus, it will have this value if no
      assignments were performed to this option.</p>
  suffixRegExp is a regular expression
    <p>Each option has an associated regular expression used to 
    match it against the command line. The regular expression 
    is built from a prefix and a suffix. The prefix matches any
    of the aliases specified in the clo file. The suffix is usually
    used to match the argument of an option. It <i>must</i> contain 
    exactly one capture group, whose match is used to set the 
    value of the option.</p>
    <p>The following snippet declares the option 
    <code>lines</code> whose alias (prefix) is <code>-</code> (hyphen) and
    the suffix is a nonempty sequence of digits followed by the
    separator.</p>
    <pre class="prettyprint"> lines:{"-"}:{int}:[suffixregexp="([0-9]+)\0"]</pre>
    <p> In effect the option lines will match on inputs as
    <code>-12345</code>. The separator (<code>\0</code>) means that the
    user needs to separate the following option on the command line (by
    space for example). The property <code>suffixregexp</code> is rather
    advanced and is needed only for strangely shaped options.  </p>

boolean inherits properties from @basic and its value is a $boolean
  allowArg is a $boolean and has the default $true
    <p>If $allowArg is set to $false then only strings of the form 
    <tt>--alias</tt> are matched and the value of the option is set to 
    true. If $allowArg is set to $true then the strings 
    <tt>--alias=true</tt> and <tt>--alias=false</tt> also match 
    and the value of the option is set to the one explicitly given.</p>

counted-boolean inherits properties from @basic and its value is an $int
  countMax is an $int and has the default $Integer.MAX_VALUE
  countStart is an $int and has the default $0
  errorOnExceedingMax is a $boolean and has the default $false
    <p>If $true and the value of the option is greater than $countMax
    then parsing of the command line stops with an error.</p>
  warnOnExceedingMax is a $boolan and has the default $false
    <p>If $true and the value of the option is greater than
    $countMax then a warning is issued but parsing continues.</p>

enum inherits properties from @string and @enum-part and its value is an $enum

enum-list inherits properties from @string-list and from @enum-part and its value is a $List&lt;String&gt;

enum-part is abstract
  caseSensitive is a $boolean and has the default $false
  choices is a $String with a special format and is required
    <p>An example of a string valid of this property is $"valueA,stringB(valueB),stringCA|stringCB(valueC)".
    This means that the string $"valueA" will set the enum value
    $valueA, the string $"stringB" will set the enum value $valueB,
    and any of the strings $"stringCA" and $"stringCB" will set the
    enum value $valueC. </p>
    <p>All strings and all values must be unique.</p>
    <p>It is guaranteed that $valueA.compareTo(valueB)&lt;0 iff $valueA
    appears before $valueB in the $choices string.</p>

file inherits properties from @one-argument-option and from @file-constraints and its value is a $File
  allowDash is a $boolean and has the default $false

file-constraints is abstract
  canBeDir is a $boolean and has the default $true
  canExist is a $boolean and has the default $true
  mustBeDir is a $boolean and has the default $false
  mustExist is a $boolean and has the default $false

file-list inherits properties from @one-argument-option and from @file-constraints and its value is a $List&lt;File&gt;
  allowDash is a $boolean and has the default $false
    <p>TODO: this also appears in @file .</p>

float inherits properties from @one-argument-option and its value is a $float
  maxValue is a $float and has the default $1.0f/0.0f
  minValue is a $float and has the default $-1.0f/0.0f

int inherits properties from @one-argument-option and its value is an $int
  maxValue is an $int and has the default $Integer.MAX_VALUE
  minValue is an $int and has the default $Integer.MIN_VALUE

list inherits properties from @one-argument-option and is abstract
  allowMultiple is a $boolean and has the default $true
  splitter is a $String and has the default $","

one-argument-option inherits properties from @basic and is abstract
  argumentName is a $String and has the default $"&lt;arg&gt;"
  argumentShape is a regular expression and has the default $"[^\0]*"
    <p>The value $\0 is special and stands for a separator between
    arguments on the command line as it is understood by the shell.
    In other words it separates the elements of the array $args
    that is passed to the main function.</p>
  between is a regular expression and has the default $"[=\0]"
    <p>The regular expression detemines the separator between the option alias and the argument value. 
       Hence The default allows either $= or $\0 (essentially white space).</p>
  blankParamAllowed is a boolean and has the default $false
  defaultValue has the type of the current option (which inherits this property) and has the default $null

string inherits properties from @one-argument-option and its value is a $String
  stripQuotesIfPresent is a $boolean and has the default $false
    <p>If both the first and the last character are double quotes then
    they are removed. Note that no check is done whether there are
    other double quotes inside and note that other types of quotes are
    ignores.</p>

string-list inherits properties from @string and from @list and its value is a $List&lt;String&gt;

string-regexp inherits properties from @string and its value is a $String
    <p>Same as @string except that the value of the option
    must match a regular expression given by the property $regexp. </p>
  regexp is a regular expression and its default value is $".*"

