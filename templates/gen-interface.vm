##! ${info.getParserName()}OptionsInterface.java
#if( "$!info.getPackageName()" != "" ) 
package $info.getPackageName();

#end
#foreach($import in $info.getValueTypeImports())
import $import;
#end

/**
 * The interface used to handle the options on the user side.
 * @author The CLOPS team
 */
public interface $info.getParserName()OptionsInterface {

#foreach($desc in $info.getOptionDescriptions())
#set($type = $desc.getType())

// Option $desc.getIdentifier(). #*
#if( "$!desc.getDescription()" != "" )
  * Description: $desc.getDescription()
#end*#
// Aliases: $desc.getAliases()

  /**
   * @return true if the option $desc.getIdentifier() has been used
   * in the command line.
   */
  boolean is$desc.getIdentifier()Set();
#set($typename = ${info.getValueTypeClass($desc)})
#if( $type.implementsInterface("ie.ucd.clops.runtime.options.IEnumOption"))
#set ($typename =  "$desc.getIdentifier()")
#set ($options = ${EnumOption.parseChoices($desc.getPropertyValue("choices"))})
#set ($sensitive=$desc.getPropertyValue("casesensitive"))
#if ($Boolean.parseBoolean(${sensitive}))
#set ($equals = "equals")
#else
#set ($equals = "equalsIgnoreCase")
#end

  /**
   * The enumeration type used to represent the string enum option.
   */
  static enum  $typename {
#foreach ($o in $options)    
    ${o.getFirst()}(#foreach($ps in ${o.getSecond()})"$!{ps}"#if($velocityCount != ${o.getSecond().size()}),#end#end)#if($velocityCount != $options.size()),#else;
#end
#end

    private final String[] matchStrings;
    private $typename(final String... s) {
      matchStrings = s;
    }
    public String toString() {
      return matchStrings.toString();
    }
    /**
     * Returns the appropriate enum value for the given string
     * @param s one of the following strings: ${EnumOption.getAllChoiceStrings($desc.getPropertyValue("choices"))}
     * @return a valid $typename member.
     */
    public static $typename get(final String s) {
      for ($typename value : ${typename}.values()) {
        for (String m : value.matchStrings) {
          if (m.${equals}(s)) return value;
        }
      }
      return null;
    }
    
#if( $type.implementsInterface("ie.ucd.clops.runtime.options.IEnumListOption"))
    public static List<$desc.getIdentifier()> get(final List<String> ss) {
      List<$desc.getIdentifier()> res = new java.util.ArrayList<$desc.getIdentifier()>(ss.size());
      for (String s : ss) {
        res.add(get(s));
      }
      return res;
    }
    
#end
  }
#end

  /**
   * Get the value of {@code Option} $desc.getIdentifier().
   * @return the value of the option $desc.getIdentifier() if it has been set
   * using the arguments. Throws an {@code IllegalStateException} otherwise.
   */ 
#if( $type.implementsInterface("ie.ucd.clops.runtime.options.IEnumListOption"))
#set ($returntype = "List<$typename>")
#else
#set ($returntype = $typename)
#end
  $returntype get$desc.getIdentifier()();
  
#end
}
