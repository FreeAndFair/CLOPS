##! ${info.getParserName()}OptionStore.java
#if( "$!info.getPackageName()" != "" ) 
package $info.getPackageName();
#end

import ie.ucd.clops.runtime.options.CLOPSErrorOption;
import ie.ucd.clops.runtime.options.OptionGroup;
import ie.ucd.clops.runtime.options.OptionStore;
import ie.ucd.clops.runtime.options.InvalidOptionPropertyValueException;
#foreach($import in $info.getValueTypeImports())
import $import;
#end
#foreach($import in $info.getTypeImports())
import $import;
#end

public class $info.getParserName()OptionStore extends OptionStore implements $info.getParserName()OptionsInterface {

#foreach($desc in $info.getOptionDescriptions())
#set($type = $desc.getType())
  private final ${info.getTypeClass($desc)} og$desc.getIdentifier();
#end
  private final CLOPSErrorOption CLOPSERROROPTION;

  public $info.getParserName()OptionStore() throws InvalidOptionPropertyValueException {

    //Options
#foreach($desc in $info.getOptionDescriptions())
#set($type = $desc.getType())
#set($id = $desc.getIdentifier())
    og${id} = new ${info.getTypeClass($desc)}("$id", "$OptionType.unifyRegexps($desc.getPrefixRegexps())");
    addOption(og${id});
#set($aliasesset = false)
#foreach($pair in $desc.getProperties())
    og${id}.setProperty("$pair.first", "$pair.second");
#if($pair.getFirst().equalsIgnoreCase("aliases"))
#set($aliasesset = true)
#end
#end
#if(!$aliasesset)
    og${id}.setProperty("aliases", "$StringUtil.collectionToString($desc.getAliases(),false)");
#end
#if( "$!desc.getDescription()" != "" )
#set( $lines = $StringUtil.quoteMultilineString($desc.getDescription()) )
#if( $lines.size() == 1 ) 
    og${id}.setProperty("description", "$desc.getDescription()");
#else
    og${id}.setProperty("description", 
      #foreach( $line in $lines )"${line}"#if($velocityCount != $lines.size()) +
      #else);
#end
#end
#end
#end
#end
  
    CLOPSERROROPTION = new ie.ucd.clops.runtime.options.CLOPSErrorOption();
    addOption(CLOPSERROROPTION);
  
    //Option groups
#foreach($desc in $info.getOptionGroupDescriptions())
#set($id = $desc.getIdentifier())
    final OptionGroup og${id} = new OptionGroup("$id");
    addOptionGroup(og${id});
#end
    final OptionGroup ogAllOptions = new OptionGroup("AllOptions");
    addOptionGroup(ogAllOptions);
    
    //Setup groupings
#foreach($desc in $info.getOptionGroupDescriptions())
#foreach($child in $desc.getChildren())
#set($id = $desc.getIdentifier())
    og${id}.addOptionOrGroup(og${child});
#end
#end
    //AllOptions group
#foreach($desc in $info.getOptionDescriptions())
    ogAllOptions.addOptionOrGroup(og$desc.getIdentifier());
#end 
  }
  
#foreach($desc in $info.getOptionDescriptions())
#set($type = $desc.getType())
#set($id = $desc.getIdentifier())
// Option $desc.getIdentifier().#*#if( "$!desc.getDescription()" != "" )
/* Description: $desc.getDescription() */
#end *#
// Aliases: $desc.getAliases()
  
  /**
   * {@inheritDoc}
   */
  public boolean is${id}Set() {
    return og${id}.hasValue();
  }
  
#set($typename = $info.getValueTypeClass($desc))
#if( $type.implementsInterface("ie.ucd.clops.runtime.options.IEnumOption"))
#set ($typename =  "$desc.getIdentifier()")

#end
#if( $type.implementsInterface("ie.ucd.clops.runtime.options.IEnumListOption"))
#set ($returntype = "List<$typename>")
#else
#set ($returntype = $typename)
#end  
  /** {@inheritDoc} */
  public $returntype get${id}() {
#if( $type.implementsInterface("ie.ucd.clops.runtime.options.IEnumOption"))  
    return ${typename}.get(og${id}.getValue());
#else
    return og${id}.getValue();
#end
  }

  /** {@inheritDoc} */
  public ${info.getValueTypeClass($desc)} getRaw${id}() {
    return og${id}.getRawValue();
  }
  
  public ${info.getTypeClass($desc)} get${id}Option() {
    return og${id};
  }
  
#end
}
